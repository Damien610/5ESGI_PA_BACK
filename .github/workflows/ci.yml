name: Python CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install alembic

      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Run tests with pytest
        run: pytest tests

      - name: Log in to Docker Hub
        if: success()
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker Test image
        if: success() && github.base_ref == 'develop' && github.ref != 'refs/heads/main'
        run: |
          DOCKER_USERNAME=damiennerri
          DATE_TAG=$(date +'%Y%m%d-%H%M')
          IMAGE_NAME="pa-2025-2026-test"
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$DATE_TAG -t $DOCKER_USERNAME/$IMAGE_NAME:latest -f Dockerfile .
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$DATE_TAG
          docker push $DOCKER_USERNAME/$IMAGE_NAME:latest

      - name: Build & Push Docker Production image
        if: success() && github.ref == 'refs/heads/main'
        run: |
          DOCKER_USERNAME=damiennerri
          DATE_TAG=$(date +'%Y%m%d-%H%M')
          IMAGE_NAME="pa-2025-2026"
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$DATE_TAG -t $DOCKER_USERNAME/$IMAGE_NAME:latest -f Dockerfile.prod .
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$DATE_TAG
          docker push $DOCKER_USERNAME/$IMAGE_NAME:latest